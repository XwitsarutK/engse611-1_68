import React, { useState } from 'react';
import './App.css';

// Import ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
import BasicCounter from './components/BasicCounter';
import NameChanger from './components/NameChanger';
import ColorPicker from './components/ColorPicker';
import TodoList from './components/TodoList';
import SimpleCalculator from './components/SimpleCalculator';
import CounterGame from './components/CounterGame';
import VotingSystem from './components/VotingSystem';
import NumberGuessing from './components/NumberGuessing';
import Stopwatch from './components/Stopwatch';
import SimpleChat from './components/SimpleChat'; // ‡πÄ‡∏û‡∏¥‡πà‡∏° import

function App() {
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á
  const [activeExample, setActiveExample] = useState('counter');

  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const examples = [
    {
      id: 'counter',
      title: '1. ‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô',
      description: '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ useState ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô',
      component: <BasicCounter />
    },
    {
      id: 'name',
      title: '2. ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠',
      description: 'State ‡∏Å‡∏±‡∏ö text input',
      component: <NameChanger />
    },
    {
      id: 'color',
      title: '3. ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á',
      description: 'State ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô UI',
      component: <ColorPicker />
    },
    {
      id: 'todo',
      title: '4. ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô',
      description: 'Array State Management',
      component: <TodoList />
    },
    {
      id: 'calculator',
      title: '5. ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏¥‡∏î‡πÄ‡∏•‡∏Ç',
      description: 'Multiple States',
      component: <SimpleCalculator />
    },
    {
      id: 'game',
      title: '6. ‡πÄ‡∏Å‡∏°‡∏ô‡∏±‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô',
      description: 'Complex State Logic',
      component: <CounterGame />
    },
    {
      id: 'voting',
      title: '7. ‡∏£‡∏∞‡∏ö‡∏ö‡πÇ‡∏´‡∏ß‡∏ï',
      description: 'Array & Object State Management',
      component: <VotingSystem />
    },
    {
      id: 'numberGuessing',
      title: '8. ‡πÄ‡∏Å‡∏°‡∏ó‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç',
      description: 'Game Logic + Multiple States',
      component: <NumberGuessing />
    },
    {
      id: 'stopwatch',
      title: '9. ‡∏ô‡∏≤‡∏¨‡∏¥‡∏Å‡∏≤‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤',
      description: 'Timer + useEffect + Array State',
      component: <Stopwatch />
    },
    {
      id: 'chat',
      title: '10. ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ä‡∏ó',
      description: 'Array State + Auto Scroll',
      component: <SimpleChat /> // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      {/* Header */}
      <header className="bg-white shadow-lg mb-8">
        <div className="container mx-auto px-4 py-6">
          <h1 className="text-3xl font-bold text-center text-gray-800">
            üéì React State Management Examples
          </h1>
          <p className="text-center text-gray-600 mt-2">
            ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô - ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 3: State Management ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
          </p>
        </div>
      </header>

      <div className="container mx-auto px-4">
        <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
          {/* Navigation Menu */}
          <div className="lg:col-span-1">
            <div className="bg-white rounded-lg shadow-lg p-4 sticky top-4">
              <h3 className="font-bold text-lg mb-4">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:</h3>
              {examples.map(example => (
                <button
                  key={example.id}
                  onClick={() => setActiveExample(example.id)}
                  className={`w-full text-left p-3 mb-2 rounded-lg transition-all ${
                    activeExample === example.id
                      ? 'bg-blue-500 text-white shadow-md'
                      : 'bg-gray-100 hover:bg-gray-200'
                  }`}
                >
                  <div className="font-medium">{example.title}</div>
                  <div className="text-sm opacity-75">{example.description}</div>
                </button>
              ))}
            </div>
          </div>

          {/* Content Area */}
          <div className="lg:col-span-3">
            <div className="bg-white rounded-lg shadow-lg p-6">
              {examples.find(ex => ex.id === activeExample)?.component}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default App;